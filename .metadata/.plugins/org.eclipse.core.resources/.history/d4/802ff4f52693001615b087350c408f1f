#include <iostream>
#include <sstream>
#include <vector>

using namespace std;

// Struct to represent state of water in the jugs.
struct State {
    int a, b, c;
    vector<string> directions;

    State(int _a, int _b, int _c) : a(_a), b(_b), c(_c) { }

    // String representation of state in tuple form.
    string to_string() {
        ostringstream oss;
        oss << "(" << a << ", " << b << ", " << c << ")";
        return oss.str();
    }
};

int main(int argc, char *argv[]) {
/*
	State s(0, 0, 8);
    cout << s.to_string() << endl;
    s.a += 3;
    s.c -= 3;
    cout << s.to_string() << endl;
    return 0;
*/
	if (argc != 7){
		cerr << "Usage: ./waterjugpuzzle <cap A> <cap B> <cap C> <goal A> <goal B> <goal C>" << endl;
		return 1;
	}
	istringstream iss;
	int m;
	char jugs[3] = {"A", "B", "C"};
	for (int i = 1; i < argc; i++){
		iss.str(argv[i]);
		if(!(iss >> m)){
			if (i <=3){
				cerr << "Error: Invalid capacity " << i << " for jug " << jugs[i] << "." << endl;
				return 1;
			} else {
				cerr << "Error: Invalid goal " << i << " for jug " << jugs[i] << "." << endl;
			};
		iss.clear();
		}
	}
}
